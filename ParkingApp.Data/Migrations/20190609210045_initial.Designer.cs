// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingApp.Data;

namespace ParkingApp.Data.Migrations
{
    [DbContext(typeof(ParkingContext))]
    [Migration("20190609210045_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("PropertyAccessMode", PropertyAccessMode.Field)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkingApp.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Owner");

                    b.Property<int>("SpotId");

                    b.HasKey("Id");

                    b.HasIndex("SpotId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ParkingApp.Domain.Entities.Spot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Company");

                    b.Property<int>("Level");

                    b.Property<string>("ParkingLot");

                    b.Property<string>("PrimaryOwner");

                    b.HasKey("Id");

                    b.ToTable("Spots");
                });

            modelBuilder.Entity("ParkingApp.Domain.Entities.Booking", b =>
                {
                    b.HasOne("ParkingApp.Domain.Entities.Spot", "BookedSpot")
                        .WithMany("SpotBookings")
                        .HasForeignKey("SpotId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
